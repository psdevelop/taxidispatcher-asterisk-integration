#!/usr/bin/php -q
<?php
//include freepbx configuration 
$restrict_mods = true;
if (!@include_once(getenv('FREEPBX_CONF') ? getenv('FREEPBX_CONF') : '/etc/freepbx.conf')) {
    include_once('/etc/asterisk/freepbx.conf');
}
list($agi, $vars) = __agi();

$get = array(
		'AMPUSER'			=> '',
		'CALLERID(all)'		=> '',
		'EXTEN'				=> '',
		'PAGEGROUP'			=> '',
		'PAGE_RECORDING'	=> '',
);

foreach ($get as $k => $v) {
	$tmp = agi_get_var($k);
	$vars[$k] = $tmp ? $tmp : $v;
}
$vars['DIALED'] = agi_get_var('EXTEN');
$vars['ORIG_CHANNEL'] = explode('-', agi_get_var('CHANNEL'));
$vars['ORIG_CHANNEL'] = $vars['ORIG_CHANNEL'][0];
dbug('vars', $vars);

switch ($vars['calltype']) {
	case 'valet_page':
	//combine microtime and rand into one string, send microtime true to force the filename to not have white spaces
	$time = microtime(true) . rand(10000, 1000000);
		spool_call(gen_page_valet(
			$vars['PAGEGROUP'], 
			$vars['CALLERID(all)'], 
			$vars['PAGE_RECORDING'],
			$vars['ORIG_CHANNEL'],
			$time),$time);
		break;
	case 'outbound_notify':
		spool_call(gen_page_notify(
			$vars['PAGEGROUP'], 
			$vars['CALLERID(all)'], 
			$vars['AMPUSER'], 
			$vars['EXTEN'],
			$vars['ORIG_CHANNEL']),$time);
		break;
	default:
		break;
}

function spool_call($callfile,$time) {
	global $amp_conf;
	$file = 'pagingpro_call_'.$time;
	file_put_contents($amp_conf['ASTSPOOLDIR'] . '/tmp/' . $file, $callfile);
	rename($amp_conf['ASTSPOOLDIR'] . '/tmp/' . $file, 
		$amp_conf['ASTSPOOLDIR'] . '/outgoing/' . $file);
}

function gen_page_valet($pagegroup, $callerid, $page_recording, $channel, $time) {
	$ret = array();
	$ret[] = 'Channel:Local/' . $pagegroup . '@ext-paging';
	$ret[] = 'Callerid:' . $callerid;
	$ret[] = 'WaitTime:30';
	$ret[] = 'Maxretries:120';
	$ret[] = 'RetryTime:30';
	$ret[] = 'Setvar:AUTOMATED_CALL=TRUE';
	$ret[] = 'Setvar:FILE_NAME=pagingpro_call_'.$time; //used for later call file deletion
	$ret[] = 'Setvar:PAGE_RECORDING=' . $page_recording;
	$ret[] = 'Setvar:ORIG_CHANNEL=' . $channel;
	$ret[] = 'Context:pagingpro-play-message';
	$ret[] = 'Extension:s';
	$ret[] = 'Priority:1';
	return implode(PHP_EOL, $ret);
}

function gen_page_notify($pagegroup, $callerid, $ampuser, $exten, $channel) {
	$ret = array();
	$ret[] = 'Channel:Local/' . $pagegroup . '@ext-paging';
	$ret[] = 'Callerid:' . $callerid;
	$ret[] = 'WaitTime:5';
	$ret[] = 'Maxretries:12';
	$ret[] = 'RetryTime:5';
	$ret[] = 'Setvar:AMPUSER=' . $ampuser;
	$ret[] = 'Setvar:DIALED=' . $exten;
	$ret[] = 'Setvar:ORIG_CHANNEL=' . $channel;
	$ret[] = 'Context:pagingpro-chanspy';
	$ret[] = 'Extension:s';
	$ret[] = 'Priority:1';
	return implode(PHP_EOL, $ret);
}

function __agi(){
	require_once('phpagi.php');
	$agi = new AGI();
	foreach($agi->request as $key => $value){//strip agi_ prefix from keys
		if(substr($key,0,4)=='agi_'){
			$opts[substr($key,4)]=$value;
		}
	}

	foreach($opts as $key => $value){//get passed in vars
		if(substr($key,0,4)=='arg_'){
			$expld=explode('=',$value);
			$opts[$expld[0]]=$expld[1];
			unset($opts[$key]);
		}
	}
	
	array_shift($_SERVER['argv']);
	foreach($_SERVER['argv'] as $arg){
		$arg=explode('=',$arg);
		//remove leading '--'
		if(substr($arg['0'],0,2) == '--'){$arg['0']=substr($arg['0'],2);}
		$opts[$arg['0']]=isset($arg['1'])?$arg['1']:null;
	}

	return array($agi, $opts);
}

function agi_get_var($value) {
	global $agi;
	$r = $agi->get_variable($value);
	
	if ($r['result'] == 1) {
		$result = $r['data'];
		return $result;
	}
	return '';
}

function __pad_string($string) {
	return str_replace(
			array('\\', ',', '='),
			array('\\\\', '\\,', '\\='),
			$string
		);
}

?>
